function [thetalist, success, iterationsData] = IKinBodyIterates(Blist, M, T, thetalist0, eomg, ev)
    thetalist = thetalist0;
    i = 0;
    maxiterations = 20;
    Vb = se3ToVec(MatrixLog6(TransInv(FKinBody(M, Blist, thetalist)) * T));
    err = norm(Vb(1:3)) > eomg || norm(Vb(4:6)) > ev;
    
    % Initialize a cell array to store iteration data
    iterationsData = {};
    % Initialize a matrix to store joint values for each iteration
    jointValuesMatrix = [];
    
    while err && i < maxiterations
        % Store iteration data
        Tsb_theta = FKinBody(M, Blist, thetalist);
        iterationsData{end + 1} = struct( ...
            'iteration', i, ...
            'thetalist', thetalist, ...
            'Tsb_theta', Tsb_theta, ...
            'Vb', Vb, ...
            'norm_wb', norm(Vb(1:3)), ...
            'norm_vb', norm(Vb(4:6)) ...
        );
         % Append joint values to the matrix
        jointValuesMatrix = [jointValuesMatrix; thetalist'];
        
        % Update thetalist
        thetalist = thetalist + pinv(JacobianBody(Blist, thetalist)) * Vb;
        i = i + 1;
        
        % Recalculate Vb and err
        Vb = se3ToVec(MatrixLog6(TransInv(FKinBody(M, Blist, thetalist)) * T));
        err = norm(Vb(1:3)) > eomg || norm(Vb(4:6)) > ev;
    end
    
    % Store the final iteration data
    Tsb_theta = FKinBody(M, Blist, thetalist);
    iterationsData{end + 1} = struct( ...
        'iteration', i, ...
        'thetalist', thetalist, ...
        'Tsb_theta', Tsb_theta, ...
        'Vb', Vb, ...
        'norm_wb', norm(Vb(1:3)), ...
        'norm_vb', norm(Vb(4:6)) ...
    );
     % Append final joint values to the matrix
    jointValuesMatrix = [jointValuesMatrix; thetalist'];
    
    success = ~err;
    csvwrite('iterates.csv', jointValuesMatrix);
    
    % Output the iteration data to the command window
    for k = 1:length(iterationsData)
        iterData = iterationsData{k};
        fprintf('Iteration: %d\n', iterData.iteration);
        fprintf('Joint Vector (thetalist): %s\n', mat2str(iterData.thetalist));
        disp('End-Effector Configuration (Tsb_theta):');
        disp(iterData.Tsb_theta);
        fprintf('Error Twist (Vb): %s\n', mat2str(iterData.Vb));
        fprintf('Norm of Rotational Part (||wb||): %f\n', iterData.norm_wb);
        fprintf('Norm of Translational Part (||vb||): %f\n', iterData.norm_vb);
        fprintf('\n');
    end
end
